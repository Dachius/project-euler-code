/**
 * Euler Problem 2:
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

public class Euler002 {
    public static void main(String[] args){
        long startTime = System.currentTimeMillis();

        // Sum starts at 2, not 0, in order to count the Fibonacci number 2.
        int[] fib = {1, 2, 3};
        int sum = 2;

        while(fib[2] <= 4000000){
            // Add even-valued Fibonacci numbers to sum.
            if(fib[2] % 2 == 0){
                sum += fib[2];
            }

            // Shift fibonacci numbers "leftwards", disposing of unneeded value.
            fib[0] = fib[1];
            fib[1] = fib[2];
            fib[2] = fib[0] + fib[1];
        }

        System.out.println("[" + (System.currentTimeMillis() - startTime) + "ms] Solution #2: " + sum);
    }
}
